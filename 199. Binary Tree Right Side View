/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        queue.add(null);
        ArrayList<Integer> list = new ArrayList<>();
        if(root == null)return list;
        
        while(!queue.isEmpty()){
            TreeNode curr = queue.remove();
            if(curr == null && queue.isEmpty())continue;
            else if(curr == null)queue.add(null);
            else{
                if(queue.peek() == null){
                    list.add(curr.val);
                }
                if(curr.left != null)queue.add(curr.left);
                if(curr.right != null)queue.add(curr.right);
            }
        }
        return list;
    }
}

// for left view of binary tree add node in right to left direction in queue
