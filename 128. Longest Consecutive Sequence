
128. Longest Consecutive Sequence

solution approches

1. naive solution sort the array and find the longest sequence
	O(nlog(n)) Time and O(1) space

    class Solution {
        public int longestConsecutive(int[] nums) {
            if(nums == null || nums.length == 0)return 0;
            Arrays.sort(nums);
            int ans = 1;
            int currentAns = 1;
            for(int i = 1 ; i < nums.length ; i++){
                if(nums[i] - 1 == nums[i-1])currentAns++;
                else if(nums[i]  != nums[i-1])currentAns = 1;
                ans = Math.max(ans , currentAns);
            }
            return ans;
        }
    }

2. Using a hashset to store all the values and iterating through all the elements and starting from the start of any possible sequence
	we calculate its length and store the max of these length
	Time O(3n) and O(n) space

    class Solution {
        public int longestConsecutive(int[] nums) {
            Set<Integer> set = new HashSet<>();
            for(int i : nums)set.add(i);

            int ans = 0;
            for(int num : nums){
                if(!set.contains(num - 1)){
                    int currAns = 1;
                    while(set.contains(num + 1)){
                        currAns++;
                        num++;
                    }
                    ans = Math.max(ans , currAns);
                }
            }
            return ans;
        }
    }
