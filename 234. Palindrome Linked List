234. Palindrome Linked List

solution approches

1. reverse second half and compare corresponding values

	Time O(n) and space O(1)

    /**
     * Definition for singly-linked list.
     * public class ListNode {
     *     int val;
     *     ListNode next;
     *     ListNode() {}
     *     ListNode(int val) { this.val = val; }
     *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     * }
     */
    class Solution {
        public boolean isPalindrome(ListNode head) {
            ListNode slow = head ;
            ListNode fast = head ; 
            while(fast != null && fast.next != null){
                fast = fast.next.next ;
                slow = slow.next ;
            }

            slow = reverse(slow);
            fast = head;

            while(slow != null){

                if(slow.val != fast.val)return false;
                slow = slow.next ;
                fast = fast.next ;
            }
            return true;
        }
        private ListNode reverse(ListNode slow){
            ListNode prev = null;
            while(slow != null){
                ListNode next = slow.next;
                slow.next = prev;
                prev = slow;
                slow = next;
            }
            return prev;
        }
    }
