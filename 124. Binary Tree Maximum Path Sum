124. Binary Tree Maximum Path Sum

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = Integer.MIN_VALUE;
    
    public int maxPathSum(TreeNode root) {
        find(root);
        return max;
    }
    
    public int find(TreeNode root){
        if(root == null)
            return 0;
        int left = find(root.left);
        int right = find(root.right);
        
        if(left<0)
            left = 0;
        if(right<0)
            right = 0;
        max = Math.max(max , left+right+root.val);
        int x = Math.max(left , right) + root.val;
        if(x>0)
            return x;
        return 0;
    }
}
