2. Add Two Numbers

solution approaches

1. add the numbers and using an int carry to 
   
	Time O(n) Space O(n)

    /**
     * Definition for singly-linked list.
     * public class ListNode {
     *     int val;
     *     ListNode next;
     *     ListNode() {}
     *     ListNode(int val) { this.val = val; }
     *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     * }
     */
    class Solution {
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            ListNode ans = new ListNode(0);
            int carry=0;
            ListNode temp = ans;
            while(l1 != null || l2 != null){
                int x = l1 != null? l1.val : 0;
                int y = l2 != null? l2.val : 0;
                int sum = ( x + y + carry) % 10;
                carry = ( x + y + carry) / 10;
                temp.next = new  ListNode(sum);
                temp = temp.next;
                if(l1 != null) l1 = l1.next;
                if(l2 != null)l2 = l2.next;
            }
            if (carry > 0) temp.next = new  ListNode(carry);
            return ans.next;
        }
    }
